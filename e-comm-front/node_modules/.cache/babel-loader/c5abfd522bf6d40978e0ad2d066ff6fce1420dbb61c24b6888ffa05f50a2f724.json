{"ast":null,"code":"var _jsxFileName = \"/home/mike/Wac/e-commerce/e-comm-front/src/ArticlePage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArticlePage = ({\n  match\n}) => {\n  _s();\n  const {\n    id,\n    productName,\n    price,\n    productImage\n  } = useParams(); // Assuming you use the 'id' parameter from the URL to identify the article\n\n  // Fetch the article content based on the 'id' from your data source or API\n  // You can store this in a state or retrieve it on the fly depending on your setup\n\n  // For demonstration purposes, let's assume the article content is stored in a variable called 'articleContent'\n  const articleContent = `Article Content for article with ID: ${id}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Article \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: productImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: articleContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(ArticlePage, \"uy/2Ao6IW/0HIBpJtMWolkvOOYE=\", false, function () {\n  return [useParams];\n});\n_c = ArticlePage;\nexport default ArticlePage;\nvar _c;\n$RefreshReg$(_c, \"ArticlePage\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","ArticlePage","match","_s","id","productName","price","productImage","articleContent","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mike/Wac/e-commerce/e-comm-front/src/ArticlePage.js"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst ArticlePage = ({ match }) => {\n  const { id, productName, price, productImage } = useParams(); // Assuming you use the 'id' parameter from the URL to identify the article\n\n  // Fetch the article content based on the 'id' from your data source or API\n  // You can store this in a state or retrieve it on the fly depending on your setup\n\n  // For demonstration purposes, let's assume the article content is stored in a variable called 'articleContent'\n  const articleContent = `Article Content for article with ID: ${id}`;\n\n  return (\n    <div>\n      <h1>Article {id}</h1>\n      <p>{productImage}</p>\n      <p>{price}</p>\n      <p>{articleContent}</p>\n    </div>\n  );\n};\n\nexport default ArticlePage;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM;IAAEC,EAAE;IAAEC,WAAW;IAAEC,KAAK;IAAEC;EAAa,CAAC,GAAGT,SAAS,CAAC,CAAC,CAAC,CAAC;;EAE9D;EACA;;EAEA;EACA,MAAMU,cAAc,GAAI,wCAAuCJ,EAAG,EAAC;EAEnE,oBACEJ,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,GAAI,UAAQ,EAACL,EAAE;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBb,OAAA;MAAAS,QAAA,EAAIF;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBb,OAAA;MAAAS,QAAA,EAAIH;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdb,OAAA;MAAAS,QAAA,EAAID;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEV,CAAC;AAACV,EAAA,CAjBIF,WAAW;EAAA,QACkCH,SAAS;AAAA;AAAAgB,EAAA,GADtDb,WAAW;AAmBjB,eAAeA,WAAW;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}